#version 460 core

layout(local_size_x = 8, local_size_y = 4, local_size_z = 1) in;

uniform layout(binding = 0) sampler2D inTex;
uniform layout(r32f, binding = 0) restrict image2D outImage;
shared float values[gl_WorkGroupSize.x*gl_WorkGroupSize.y];
uniform layout(location = 0) ivec2 inTexSize;

void main()
{
	if(gl_GlobalInvocationID.x < inTexSize.x && gl_GlobalInvocationID.y < inTexSize.y)
		values[gl_LocalInvocationIndex] = texelFetch(inTex, ivec2(gl_GlobalInvocationID.xy), 0).r;
	memoryBarrierShared();
	//barrier();
	if(gl_LocalInvocationIndex == 0)
	{
		float minValue = 1.0f;
		for(int i = 0; i < int(gl_WorkGroupSize.x*gl_WorkGroupSize.y); ++i)
			minValue = min(minValue, values[i]);
		imageStore(outImage, ivec2(gl_WorkGroupID.xy), vec4(minValue));
	}
}