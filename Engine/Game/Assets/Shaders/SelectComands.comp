#version 460 core

struct Command
{
	uint mCount;		 // Number of indices in the mesh
	uint mInstanceCount; // Number of instances to render
	uint firstIndex;	 // Index offset in the EBO
	uint baseVertex;	 // Vertex offset in the VBO
	uint baseInstance;   // Instance Index
};
layout(std430, binding = 13) readonly buffer ReadCommands {Command inCommands[];};
layout(std430, binding = 22) writeonly buffer WriteCommands {Command outCommands[];};
layout(std430, binding = 23) writeonly buffer ParameterBuffer { int numOutCommands; };
layout(location = 0) uniform uint numCommands;

layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;
void main()
{
	uint index = atomicAdd(numOutCommands, 1);
	if(index < numCommands) 
    {
		outCommands[index] = inCommands[index];
	}
}